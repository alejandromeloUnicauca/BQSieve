/home/ingesis/cado-nfs-2.3.0/cado-nfs-2.3.0/build/debian9/linalg/bwc/bwc.pl :complete thr=2 m=64 n=64 nullspace=left interval=100 matrix=/tmp/matrix.bin wdir=/tmp/c60/c60.bwc interleaving=0
## Entering task: [01;34mprep[0m
## [01;33mCheck for prep[0m: none of the output files for prep have been found, need to run prep now. We want to create files:
## [01;33mCheck for prep[0m: 	X
## [01;33mCheck for prep[0m: 	V0-64.0
1 nodes on debian
 9 .
Creating balancing file matrix.1x2.bin
/tmp/matrix.bin: 489 rows 488 cols (1 extra rows) weight 4215
Padding to a square matrix
Padding to 489+7=496 rows which is 1 blocks of 2*248=496 rows
read /tmp/matrix.rw.bin in 0.0 s (315.5 MB / s)
489 rows ; avg 8.6 sdev 1.2 [scan time 0.0 s]
Padding to 488+8=496 columns which is 2 blocks of 1*248=248 columns
read /tmp/matrix.cw.bin in 0.0 s (682.3 MB / s)
488 columns ; avg 8.6 sdev 20.8 [scan time 0.0 s]
Choosing a column permutation based on largest deviation (20.76 > 1.22)
sort time 0.0 s
heap fill time 0.0
column slice 0, span=248, weight=2107
column slice 1, span=248, weight=2108
Now trying to load matrix cache files
Matrix dispatching starts
Balancing flags: 0x9
Total 489 rows 488 cols (1 extra rows) 4215 coeffs
Padding to a matrix of size 496x496
Consistency check ... ok
Creating column map of size 7.6k ... done
J0T1 ( 0, 1) expects rows 0+496 cols 248+248.
J0T0 ( 0, 0) expects rows 0+496 cols 0+248.
main: 18.4k, 489 rows in 0 s ; 0.0b/s  
Master loop finished ; read 489 rows

[J0T0] N=496 W=2107 R[0..9],4.2~1.6 C[0..245],8.5~20.3.
[J0T0] building local matrix


[J0T1] N=496 W=2108 R[0..9],4.2~1.6 C[0..265],8.5~20.9.
[J0T1] building local matrix

Final sends completed, everybody should finish.
[0] sent 496 rows, 2107 coeffs (12.1k)
[1] sent 496 rows, 2108 coeffs (12.1k)
[9] J0T1 building cache for matrix.1x2.14e2c200.h0.v1
496 rows 248 cols
Ssl0: cols 0+248... w 2108 ; avg dj 0.2 ; max dj 8 [packed]
Saving matrix.1x2.14e2c200.h0.v1 to cache file matrix.1x2.14e2c200.h0.v1-bucketT.bin
[9] J0T1 uses cache file matrix.1x2.14e2c200.h0.v1-bucketT.bin
[9] J0T0 building cache for matrix.1x2.14e2c200.h0.v0
496 rows 248 cols
Ssl0: cols 0+248... w 2107 ; avg dj 0.2 ; max dj 8 [packed]
Saving matrix.1x2.14e2c200.h0.v0 to cache file matrix.1x2.14e2c200.h0.v0-bucketT.bin
[9] J0T0 uses cache file matrix.1x2.14e2c200.h0.v0-bucketT.bin
Matrix rank is at most 489 (based on zero columns and rows encountered)
// Random generator seeded with 1698335780
// Generating new x,y vector pair (trial # 0)
// generated V0-64.0 (trial # 0)
// Dimension of kernel: 9
// Generating new x,y vector pair (trial # 1)
// generated V0-64.0 (trial # 1)
// Dimension of kernel: 8
// Generating new x,y vector pair (trial # 2)
// generated V0-64.0 (trial # 2)
// Dimension of kernel: 6
// Generating new x,y vector pair (trial # 3)
// generated V0-64.0 (trial # 3)
// Dimension of kernel: 9
// Generating new x,y vector pair (trial # 4)
// generated V0-64.0 (trial # 4)
// Dimension of kernel: 5
// Generating new x,y vector pair (trial # 5)
// generated V0-64.0 (trial # 5)
// Dimension of kernel: 10
// Generating new x,y vector pair (trial # 6)
// generated V0-64.0 (trial # 6)
// Dimension of kernel: 6
// Generating new x,y vector pair (trial # 7)
// generated V0-64.0 (trial # 7)
// Dimension of kernel: 12
// Generating new x,y vector pair (trial # 8)
// generated V0-64.0 (trial # 8)
// Dimension of kernel: 7
// Generating new x,y vector pair (trial # 9)
// generated V0-64.0 (trial # 9)
// Dimension of kernel: 9
// Getting bored. Trying 2 x vectors
// Generating new x,y vector pair (trial # 10)
// generated V0-64.0 (trial # 10)
// Dimension of kernel: 0
// Found good x,y vector pair after 11 trials
Timings for prep: (wct) 0.01
Timings for prep: (cpu) 0.01 (aggregated over all threads and 1 MPI jobs)
## Entering task: [01;34mkrylov[0m
## [01;33mCheck for krylov[0m: missing check vector C.100
1 nodes on debian
 9 .
Now trying to load matrix cache files
[9] J0T0 uses cache file matrix.1x2.14e2c200.h0.v0-bucketT.bin
[9] J0T1 uses cache file matrix.1x2.14e2c200.h0.v1-bucketT.bin
We have start=0: creating C.0 as an expanded copy of X
Computing trsp(x)*M^k for check stops k=100
....................................................................................................saved C.100
Timings for secure: (wct) 0.00
Timings for secure: (cpu) 0.00 (aggregated over all threads and 1 MPI jobs)
## krylov max iteration is 30
## complete range list for krylov: 0-64
## V files for 0..64: last krylov checkpoint is 0
## range list for krylov: 0-64
## [01;33mCheck for krylov[0m: Pending tasks for krylov:
## [01;33mCheck for krylov[0m: 	ys=0..64 start=0
1 nodes on debian
 9 .
Now trying to load matrix cache files
[9] J0T1 uses cache file matrix.1x2.14e2c200.h0.v1-bucketT.bin
[9] J0T0 uses cache file matrix.1x2.14e2c200.h0.v0-bucketT.bin
r0  0/1, bd: 100 in 0.0s ; one: 0.00s (xput: 0.0b/s)
c0  0/2, ra: 100 in 0.0s ; one: 0.00s (xput: 0.0b/s)
c1  1/2, ra: 100 in 0.0s ; one: 0.00s (xput: 0.0b/s)
Loading V0-64.0.0 ...done
Loading check vector C.100...done
Each thread allocates 50 kb for the A matrices
Target iteration is 30 ; going to 100
iteration 1
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 2
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 3
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 4
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 5
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 10
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 15
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 20
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 40
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 60
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 80
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 100
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
N=100 ; CPU0: 0.00 s/iter [0.000..0.000], 18.25 ns/0.0Gitems
N=100 ; cpu-wait0: 0.00 s/iter [0.000..0.000]
N=100 ; COMM0: 0.00 s/iter [0.000..0.000]
N=100 ; comm-wait0: 0.00 s/iter [0.000..0.000]
krylov: N=100 ; ETA (N=100): Thu Oct 26 10:56:20 2023 [0.000 s/iter]
krylov done N=100 ; CPU0: 0.00 s/iter [0.000..0.000], 19.04 ns/0.0Gitems
krylov done N=100 ; cpu-wait0: 0.00 s/iter [0.000..0.000]
krylov done N=100 ; COMM0: 0.00 s/iter [0.000..0.000]
krylov done N=100 ; comm-wait0: 0.00 s/iter [0.000..0.000]
Done krylov.
n 2107
n 2108
small2	0.00s [0.00s] ; n=2108      ;  0.58 ns/c ; scaled*1.00 :  0.58/c
small2	0.00s [0.00s] ; n=2107      ;  0.59 ns/c ; scaled*1.00 :  0.59/c
------------------------------------------------------------
small2	0.00s ; n=2107      ;  0.59 ns/c ; scaled*1.00 :  0.59/c
--------------------
small2	0.00s ; n=2108      ;  0.58 ns/c ; scaled*1.00 :  0.58/c
Timings for krylov: (wct) 0.52
Timings for krylov: (cpu) 0.11 (aggregated over all threads and 1 MPI jobs)
## Entering task: [01;34mlingen[0m
## [01;33mCheck for lingen[0m: lingen has not run yet. Running now.
Using OpenMP with 2 thread(s)
Reading scalar data in polynomial ``a''
Using A(X) div X in order to consider Y as starting point
Computing t0
[X^0] A, col 62 does not increase rank (still 62)
[X^1] A, col 0 increases rank to 64 (head row 63)
Found satisfying init data for t0=2
t0 = 2
Computing value of E(X)=A(X)F(X) (degree 98) [ +O(X^99) ]
Throwing out a(X)
E: 97 coeffs, t=2
16      39cols=0: [86,90..127]
17      64cols=0: [61..63,65,68..127] [86,90..127]*2
0 * [97, gf2x_fake_fft] 0/1
1 [64-64, go_quadratic] 1/2 0.0031 -> 0.0 (total: 0.0)
lingen ETA: Thu Oct 26 10:56:20 2023
17      deg(pi_l) = 10 ; escaping
[t=  17] delta = 12 [39] 11 [22] 9 [3] 11 9 11 [2] 9 [18] 8 9 [3] 8 [38]
Computing final F from PI (crc(pi)=9e8a45a7, ncoef=64)
Writing F files (crc(F)=e0ffc306)
Picking 64 columns 61-63,65,68-127
Timings for lingen: (wct) 0.01
Timings for lingen: (cpu) 0.01 (aggregated over all threads and 1 MPI jobs)
Total usage: time 0s (cpu), 0s (wct) ; memory 30M, peak 30M
## Entering task: [01;34mmksol[0m
## mksol max iteration is 10
## S files for 0-64 --> last mksol checkpoint is 0
## [01;33mCheck for mksol[0m: Pending tasks for mksol:
## [01;33mCheck for mksol[0m: 	solutions=0-64 start=0
1 nodes on debian
 9 .
Now trying to load matrix cache files
[9] J0T1 uses cache file matrix.1x2.14e2c200.h0.v1-bucketT.bin
[9] J0T0 uses cache file matrix.1x2.14e2c200.h0.v0-bucketT.bin
r0  0/1, bd: 100 in 0.0s ; one: 0.00s (xput: 0.0b/s)
c0  0/2, ra: 100 in 0.0s ; one: 0.00s (xput: 0.0b/s)
c1  1/2, ra: 100 in 0.0s ; one: 0.00s (xput: 0.0b/s)
Each thread allocates 50 kb for the F matrices
Target iteration is unspecified ; going to end of F file
Loading V0-64.0 ...done
We read 10 coefficients from F in total
iteration 1
+-------------------------------------+
|0.00@0%+0.00@-nan% 0.00@0%+0.00@-nan%|
+-------------------------------------+
iteration 2
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 3
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 4
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 5
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 10
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 15
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 20
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 40
+-------------------------------+
|0.00@0%+0.00@0% 0.00@0%+0.00@0%|
+-------------------------------+
iteration 60
+-----------------------------------+
|0.00@0%+0.00@0%   0.00@0%+0.00@366%|
+-----------------------------------+
iteration 80
+-----------------------------------+
|0.00@0%+0.00@0%   0.00@0%+0.00@261%|
+-----------------------------------+
iteration 100
+-----------------------------------+
|0.00@0%+0.00@0%   0.00@0%+0.00@218%|
+-----------------------------------+
N=100 ; CPU0: 0.00 s/iter [0.000..0.000], 13.14 ns/0.0Gitems
N=100 ; cpu-wait0: 0.00 s/iter [0.000..0.000]
N=100 ; COMM0: 0.00 s/iter [0.000..0.000]
N=100 ; comm-wait0: 0.00 s/iter [0.000..0.000]
mksol: N=100 ; ETA (N=100): Thu Oct 26 10:56:21 2023 [0.000 s/iter]
mksol done N=100 ; CPU0: 0.00 s/iter [0.000..0.000], 13.39 ns/0.0Gitems
mksol done N=100 ; cpu-wait0: 0.00 s/iter [0.000..0.000]
mksol done N=100 ; COMM0: 0.00 s/iter [0.000..0.000]
mksol done N=100 ; comm-wait0: 0.00 s/iter [0.000..0.000]
Done mksol.
Timings for mksol: (wct) 0.52
Timings for mksol: (cpu) 0.14 (aggregated over all threads and 1 MPI jobs)
## Entering task: [01;34mgather[0m
## [01;33mCheck for gather[0m: Need to run gather to create the files: K.sols0-64.0
## mksol max iteration is 10
## Number of S files found:
##        0-64 | 1
## [00;32mCheck for gather[0m: All required files for gather seem to be present, good.
1 nodes on debian
 9 .
Now trying to load matrix cache files
[9] J0T0 uses cache file matrix.1x2.14e2c200.h0.v0-bucketT.bin
[9] J0T1 uses cache file matrix.1x2.14e2c200.h0.v1-bucketT.bin
Trying to build solutions 0..64
loading S.sols0-64.0-100
V * M^2 is zero [K.sols0-64.1 contains V * M^1]!
K.sols0-64.0 is now a left nullspace vector for M (for a square M of dimension 489x489).
K.sols0-64.0.txt (in ascii) is now a left nullspace vector for M (for the original M, of dimension 489x488).
Timings for gather: (wct) 0.01
Timings for gather: (cpu) 0.00 (aggregated over all threads and 1 MPI jobs)
## Entering task: [01;34mcleanup[0m
## [01;33mCheck for cleanup[0m: Will run cleanup to compute W.sols0-64 from the files:
## [01;33mCheck for cleanup[0m: 	K.sols0-64.0
## [01;33mCheck for cleanup[0m: 	K.sols0-64.1
/tmp/c60/c60.bwc/K.sols0-64.0: rank 18
/tmp/c60/c60.bwc/K.sols0-64.1: rank drops from 18 to 2
final adjustment: rank drops from 18 to 16
/tmp/c60/c60.bwc/W.sols0-64: written 16 kernel vectors
